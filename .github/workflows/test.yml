# name: Test

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

# jobs:
#   test:
#     name: Test on node ${{ matrix.node_version }} and ${{ matrix.os }}
#     runs-on: ${{ matrix.os }}
#     env:
#       TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
#       TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
#       OS: ${{ matrix.os }}
#       NODE_VERSION: ${{ matrix.node_version }}
#     strategy:
#       matrix:
#         node_version: ['17', '16']
#         os: [ubuntu-latest, macOS-latest]

#     steps:
#       - name: Checkout Repo
#         uses: actions/checkout@v2

#       # - name: Use Node.js ${{ matrix.node_version }} 
#       #   uses: actions/setup-node@v3
#       #   with:
#       #     node-version: ${{ matrix.node_version }}
      
#       # - name: Install dependencies 
#       #   run: |
#       #     npm install -g pnpm
#       #     pnpm install
#       #     npx playwright install

#       # - name: Run tests 
#       #   run: pnpm turbo run test --force

name: Tests
on:
  push:
    branches:
      - main
jobs:
  integration:
    name: "üëÄ Integration Test: (OS: ${{ matrix.os }} Node: ${{ matrix.node }})"
    
    strategy:
      matrix:
        node-version: [16]
        os:
            - ubuntu-latest
            # - macos-latest
            - windows-latest
        include:
          - os: ubuntu-latest
            playwright_binary_path: ~/.cache/ms-playwright
          # - os: macos-latest
          #   playwright_binary_path: ~/Library/Caches/ms-playwright
          - os: windows-latest
            playwright_binary_path: '~\\AppData\\Local\\ms-playwright'
            
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    
    - uses: pnpm/action-setup@v2.2.2
      with:
        version: 7
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'
    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: üïµÔ∏è‚Äç‚ôÇÔ∏è Get current Playwright version
      id: playwright-version
      shell: bash
      run: |
        playwright_version=$(npm info @playwright/test version)
        echo "::set-output name=version::${playwright_version}"

    - name: ü§ñ Cache Playwright binaries
      uses: actions/cache@v3
      id: playwright-cache
      with:
        path: ${{ matrix.playwright_binary_path }}
        key: ${{ runner.os }}-${{ runner.arch }}-cache-playwright-${{ steps.playwright-version.outputs.version }}

    - name: üñ®Ô∏è Playwright info
      shell: bash
      run: |
        echo "OS: ${{ matrix.os }}"
        echo "Playwright version: ${{ steps.playwright-version.outputs.version }}"
        echo "Playwright install dir: ${{ matrix.playwright_binary_path }}"
        echo "Cache key: ${{ runner.os }}-${{ runner.arch }}-cache-playwright-${{ steps.playwright-version.outputs.version }}"
        echo "Cache hit: ${{ steps.playwright-cache.outputs.cache-hit == 'true' }}"

    - name: üì• Install Playwright
      if: steps.playwright-cache.outputs.cache-hit != 'true'
      run: pnpm --filter solid-start-tests install:playwright

    - name: üëÄ Run Integration Tests
      run: npm run test
